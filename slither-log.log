'npx hardhat clean' running (wd: ./omron-contracts)
'npx hardhat clean --global' running (wd: ./omron-contracts)
'npx hardhat compile --force' running (wd: ./omron-contracts)
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.8.20', '>=0.4.22<0.9.0', '^0.8.0', '^0.8.20']
	- 0.8.20 (contracts/OmronDeposit.sol#2)
	- 0.8.20 (contracts/interfaces/IERC20Min.sol#2)
	- 0.8.20 (contracts/interfaces/IOmronDeposit.sol#2)
	- >=0.4.22<0.9.0 (node_modules/hardhat/console.sol#2)
	- ^0.8.0 (contracts/mock/FuzzTest.sol#2)
	- ^0.8.0 (contracts/mock/ReentrancyAttack.sol#2)
	- ^0.8.0 (contracts/mock/brokenERC20.sol#2)
	- ^0.8.0 (contracts/mock/tstETH.sol#2)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/access/Ownable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol#3)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Address.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Context.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/Pausable.sol#4)
	- ^0.8.20 (node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol#4)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Pragma version0.8.20 (contracts/OmronDeposit.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
solc-0.8.20 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter OmronDeposit.addWhitelistedToken(address)._tokenAddress (contracts/OmronDeposit.sol#135) is not in mixedCase
Parameter OmronDeposit.setWithdrawalsEnabled(bool)._enabled (contracts/OmronDeposit.sol#148) is not in mixedCase
Parameter OmronDeposit.getUserInfo(address)._userAddress (contracts/OmronDeposit.sol#189) is not in mixedCase
Parameter OmronDeposit.calculatePoints(address)._userAddress (contracts/OmronDeposit.sol#223) is not in mixedCase
Parameter OmronDeposit.tokenBalance(address,address)._userAddress (contracts/OmronDeposit.sol#240) is not in mixedCase
Parameter OmronDeposit.tokenBalance(address,address)._tokenAddress (contracts/OmronDeposit.sol#241) is not in mixedCase
Parameter OmronDeposit.deposit(address,uint256)._tokenAddress (contracts/OmronDeposit.sol#255) is not in mixedCase
Parameter OmronDeposit.deposit(address,uint256)._amount (contracts/OmronDeposit.sol#256) is not in mixedCase
Parameter OmronDeposit.withdraw(address,uint256)._tokenAddress (contracts/OmronDeposit.sol#286) is not in mixedCase
Parameter OmronDeposit.withdraw(address,uint256)._amount (contracts/OmronDeposit.sol#287) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:. analyzed (22 contracts with 94 detectors), 13 result(s) found
